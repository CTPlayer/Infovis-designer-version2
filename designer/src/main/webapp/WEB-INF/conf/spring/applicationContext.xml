<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

  <context:property-placeholder location="classpath:application.properties" ignore-unresolvable="true" />

  <!-- *********************************** DB CONNECTION SETTING pool:start ************************************** -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <!-- 基本属性 url、user、password -->
    <property name="url" value="${druid.url}" />
    <property name="username" value="${druid.username}" />
    <property name="password" value="${druid.password}" />

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="1" />
    <property name="minIdle" value="1" />
    <property name="maxActive" value="20" />

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />

    <property name="validationQuery" value="SELECT 'x'" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

    <!-- 配置监控统计拦截的filters -->
    <property name="filters" value="stat" />
  </bean>
  <bean id="dynamicDataSource" class="core.plugin.spring.database.route.DynamicDataSource">
    <property name="targetDataSources">
      <map></map>
    </property>
    <property name="defaultTargetDataSource" ref="dataSource" />
  </bean>
  <!-- *********************************** DB CONNECTION SETTING pool:end **************************************** -->

  <!-- Freemarker Common Setting:begin -->
  <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
  <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPaths">
      <value>/WEB-INF/views/ftl/</value>
    </property>
    <property name="freemarkerVariables">
      <map>
        <entry key="xml_escape" value-ref="fmXmlEscape" />
      </map>
    </property>
    <property name="defaultEncoding">
      <value>UTF-8</value>
    </property>
    <property name="freemarkerSettings">
      <props>
        <prop key="tag_syntax">auto_detect</prop>
        <prop key="template_update_delay">0</prop>
        <prop key="default_encoding">UTF-8</prop>
        <prop key="output_encoding">UTF-8</prop>
        <prop key="locale">zh_CN</prop>
        <prop key="date_format">yyyy-MM-dd</prop>
        <prop key="time_format">HH:mm:ss</prop>
        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
      </props>
    </property>
  </bean>
  <!-- Freemarker Common Setting:end -->

  <!-- *********************************** CACHE SETTING encache:begin ******************************************* -->
    <cache:annotation-driven />
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:configLocation="/WEB-INF/conf/module/applicationContext-ehcache.xml"
        p:shared="false" />
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cacheManager-ref="cacheManagerFactory" />

  <!-- *********************************** CACHE SETTING encache:end ********************************************* -->
  
  <!-- 注册容器初始化监听 -->
  <bean class="aop.ApplicationBootstrapListener" />
  
  <import resource="../module/applicationContext-dao.xml" />
</beans>